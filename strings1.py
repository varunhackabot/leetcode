# -*- coding: utf-8 -*-
"""Strings1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gCNsKhAO9VXYGKUsQ7JYCesBSJdKoU3a
"""

#Richest Customers

class Solution:
    def maximumWealth(self, accounts: List[List[int]]) -> int:
        s = 0
        l = 0
        k = []
        for i in accounts:
            s=sum(i)
            k.append(s)
        l = max(k)
        return(l)

#Goal Parser

class Solution:
    def interpret(self, command: str) -> str:
        a=command.replace('()','o')
        b = a.replace('(al)','al')
        return(b)

#Count items matching a rule
class Solution:
    def countMatches(self, items: List[List[str]], ruleKey: str, ruleValue: str) -> int:
        a = 0
        for i in items:
            if(ruleKey=="type" and ruleValue==i[0]):
                a+=1
            elif(ruleKey=="color" and ruleValue==i[1]):
                a+=1
            elif(ruleKey=="name" and ruleValue==i[2]):
                a+=1
        return(a)

#Check if string is panagram
class Solution:
    def checkIfPangram(self, sentence: str) -> bool:
        v = set('abcdefghijklmnopqrstuvwxyz')
        a = set(sentence)
        b = v-a
        if((v-a)==set()):
            return True
        else:
            return False

#Check If Two Strings Are Equivalent
class Solution:
    def arrayStringsAreEqual(self, word1: List[str], word2: List[str]) -> bool:
        a = ""
        b = ""
        for i in word1:
            a+=i
        for j in word2:
            b+=j
        if(a==b):
            return True
        else:
            return False